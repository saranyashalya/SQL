In SQL server, there are different types of JOINS.
1. CROSS JOIN
2. INNER JOIN 
3. OUTER JOIN 

Outer Joins are again divided into 3 types
1. Left Join or Left Outer Join
2. Right Join or Right Outer Join
3. Full Join or Full Outer Join

Create table tblDepartment
(
     ID int primary key,
     DepartmentName nvarchar(50),
     Location nvarchar(50),
     DepartmentHead nvarchar(50)
)
Go

Insert into tblDepartment values (1, 'IT', 'London', 'Rick')
Insert into tblDepartment values (2, 'Payroll', 'Delhi', 'Ron')
Insert into tblDepartment values (3, 'HR', 'New York', 'Christie')
Insert into tblDepartment values (4, 'Other Department', 'Sydney', 'Cindrella')
Go

Create table tblEmployee
(
     ID int primary key,
     Name nvarchar(50),
     Gender nvarchar(50),
     Salary int,
     DepartmentId int foreign key references tblDepartment(Id)
)
Go

Insert into tblEmployee values (1, 'Tom', 'Male', 4000, 1)
Insert into tblEmployee values (2, 'Pam', 'Female', 3000, 3)
Insert into tblEmployee values (3, 'John', 'Male', 3500, 1)
Insert into tblEmployee values (4, 'Sam', 'Male', 4500, 2)
Insert into tblEmployee values (5, 'Todd', 'Male', 2800, 2)
Insert into tblEmployee values (6, 'Ben', 'Male', 7000, 1)
Insert into tblEmployee values (7, 'Sara', 'Female', 4800, 3)
Insert into tblEmployee values (8, 'Valarie', 'Female', 5500, 1)
Insert into tblEmployee values (9, 'James', 'Male', 6500, NULL)
Insert into tblEmployee values (10, 'Russell', 'Male', 8800, NULL)
Go


General Formula for Joins
SELECT      ColumnList
FROM           LeftTableName
JOIN_TYPE  RightTableName
ON                 JoinCondition

Note: JOIN or INNER JOIN means the same. It's always better to use INNER JOIN, as this explicitly specifies your intention.

#cross join - cartesian product between two tables , no on clause needed
select Name, Gender, Salary, DepartmentName 
from tblEmployee
cross join tblDepartment;

#inner join - returns only matching rows between tables
select Name, Gender, Salary, DepartmentName
from tblEmployee
inner join tblDepartment
on tblEmployee.DepartmentId = tblDepartment.Id;


#Left join - returns matching rows + all rows from left table 
select Name, Gender, Salary, DepartmentName
from tblEmployee
left join tblDepartment
on tblEmployee.DepartmentId = tblDepartment.Id;

#Right join - returns matching rows + all rows from Right table 
select Name, Gender, Salary, DepartmentName
from tblEmployee
outer join tblDepartment
on tblEmployee.DepartmentId = tblDepartment.Id;

#full outer join - returns all rows from both tables
select Name, Gender, Salary, DepartmentName
from tblEmployee
full join tblDepartment
on tblEmployee.DepartmentId = tblDepartment.Id;


#Advanced joins
#Non matching rows from left table
select Name, Gender, Salary, DepartmentName
from tblEmployee E
left join tblDepartment D
on E.DepartmentId = D.Id
where E.DepartmentId is NULL
Go

#Non matching rows from right table
select Name, Gender, Salary, DepartmentName
from tblEmployee E
right join tblDepartment D
on E.DepartmentId = D.Id
where E.DepartmentId is NULL

#Non matching rows from both the tables.
select Name, Gender, Salary, DepartmentName
from tblEmployee E
full join tblDepartment D
on E.DepartmentId = D.Id
where E.DepartmentId is NULL or 
D.Id is NULL

#Self join
select e.Name , m.Name
from tblemp e
left join tblemp m
on e.ManagerID = m.EmployeeId;


